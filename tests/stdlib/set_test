run arr.int {
  set s1 &= {1, 45, 127, 65, 88}
  set s2 &= {33, 88, 0, 45}
  int sum
  for i in arr(s1 & s2) {
    sum += i
  }
  Set(s2, sum)
  return arr(s2 | s1)
}
===== [0 1 33 45 65 88 127 133]
run arr.int {
  set s1 &= {0, 16, 15, 32, 63, 64}
  set s2 = ^s1
  s2[8] = false
  s2[63] = true
  Toggle(s2, 22)
  return arr(^s2)
}
===== [0 8 15 16 22 32 64]
run arr.int {
  set s1 &= {31, 8, 25}
  set s2 &= {35, 4+4, 100+99}
  return arr(s1+=s2)
}
===== [8 25 31 35 199]
run arr.int {
  set s &= {780, 99, 128, 105, 136}
  arr.int as = arr(s)
  as += 330
  s &= set(as)
  return arr(s)
}
===== [99 105 128 136 330 780]
run str {
  set s &= {7, 5, 8, 1}
  if Toggle(s, 1) : Toggle(s,0)
  return str(s)
}
===== 100001011
run str {
  set s1 = set(`10100001`)
  arr out
  for b, i in s1 {
    if b : out += `%{i}`
  }
  return Join(out, ` `)
}
===== 0 2 7
run str {
  set s1 = set(`00110011`)
  set s2 = s1
  set s3 &= s1
  s1[0] = true
  s1[7] = false
  s3[8] = true
  return str(s2)+ `-` + str(s3) + `-` + str(s1)
}
===== 00110011-101100101-101100101
run str {
  set ms &= set(`1010101100111`)
  ms[7] = false
  str out 
  for i in ms {
    out += ?(i, `X`, `o`)
  }
  return str(ms) + TrimRight(out, `o`)
}
===== 1010101000111XoXoXoXoooXXX
run int {
  set s1
  s1[0] = true
  s1[63] = true
  s1[100] = true
  Set(s1, 99)
  UnSet(s1, 63)
  return int(s1[3000]) + *s1 + ?(s1[100], 5, -5) + ?(s1[1], 3, 6) + 
     ?(s1[63], -5, 5) + ?(s1[99], 5, -5)
}
===== 149
